name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run linting
      run: pnpm lint

    - name: Run type checking
      run: pnpm build

    - name: Run tests
      run: pnpm test:coverage
      env:
        CI: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build application
      run: pnpm build
      env:
        # Public-facing API keys (safe to expose to client-side)
        NEXT_PUBLIC_MAP_KEY: ${{ secrets.NEXT_PUBLIC_MAP_KEY }}
        NEXT_PUBLIC_PLACES_KEY: ${{ secrets.NEXT_PUBLIC_PLACES_KEY }}
        NEXT_PUBLIC_AWS_REGION: us-east-2
        NEXT_PUBLIC_COGNITO_USER_POOL_ID: ${{ secrets.COGNITO_USER_POOL_ID }}
        NEXT_PUBLIC_COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
        NEXT_PUBLIC_DYNAMODB_USERS_TABLE: missouri-crossroads-users
        NEXT_PUBLIC_DYNAMODB_NOTES_TABLE: missouri-crossroads-notes
        NEXT_PUBLIC_DYNAMODB_ADMIN_LOGS_TABLE: missouri-crossroads-admin-logs
        # Server-side only secrets (NEVER use NEXT_PUBLIC_ prefix for these)
        # Add these to GitHub Secrets:
        # - AWS_ACCESS_KEY_ID
        # - AWS_SECRET_ACCESS_KEY  
        # - S3_BUCKET_NAME
        # - COGNITO_CLIENT_SECRET

  # Deployment jobs removed - not deploying to any server currently
  # Add deployment jobs here when ready to deploy to your chosen platform

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run security audit
      run: |
        pnpm audit --audit-level moderate

    - name: Run dependency check
      uses: actions/dependency-review-action@v4
      if: github.event_name == 'pull_request'
